{"version":3,"sources":["pages/Overview.js"],"names":["Overview","useState","data","setData","fetchData","useSelector","state","OverviewReducer","item","useEffect","console","log","Object","keys","length","className","id","src","recipe","image","alt","label","dishType","mealType","healthLabels","map","index","yield","Math","ceil","calories","floor","digest","total","totalNutrients","CHOLE","quantity","NA","CA","MG","K","FE","memo"],"mappings":"kLAGMA,EAAW,WACf,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,gBAAgBC,QAY/D,OALAC,qBAAU,WAJJL,GACFD,EAAQC,KAKT,CAACA,IAEJM,QAAQC,IAAI,gBAAiBT,GAE3B,gCACE,iCACE,8CAGDU,OAAOC,KAAKX,GAAMY,OAAS,GAC1B,sBAAKC,UAAU,YAAYC,GAAG,gBAA9B,UACE,sBAAKD,UAAU,UAAUC,GAAG,uBAA5B,UACE,sBAAKD,UAAU,kBAAf,UACE,qBACEE,IAAKf,EAAKgB,OAAOC,MACjBJ,UAAU,0BACVK,IAAKlB,EAAKgB,OAAOG,QAEnB,sBAAMN,UAAU,eAAhB,SAAgCb,EAAKgB,OAAOI,cAE9C,qBAAKP,UAAU,mBAAf,SACE,sBAAKA,UAAU,YAAYC,GAAG,YAA9B,UACE,oBAAGA,GAAG,YAAN,UACG,IACD,yBAFF,IAEiBd,EAAKgB,OAAOK,YAE7B,oBAAIR,UAAU,aAAd,SAA4Bb,EAAKgB,OAAOG,QACvCnB,EAAKgB,OAAOM,aAAaC,KAAI,SAACjB,EAAMkB,GACnC,OACE,sBAAkBX,UAAU,eAA5B,SACGP,GADQkB,cAQrB,sBAAKX,UAAU,0BAAf,UACE,sBAAKA,UAAU,cAAf,UACE,8BAAIb,EAAKgB,OAAOS,MAAhB,eACA,+BACGC,KAAKC,KAAK3B,EAAKgB,OAAOY,UADzB,IACoC,8CAGtC,sBAAKf,UAAU,cAAf,UACE,8BACE,yBADF,WACwB,IACtB,+BAAOa,KAAKG,MAAM7B,EAAKgB,OAAOc,OAAO,GAAGC,YAE1C,8BACE,yBADF,OACoB,IAClB,+BAAOL,KAAKG,MAAM7B,EAAKgB,OAAOc,OAAO,GAAGC,YAE1C,8BACE,yBADF,SACsB,IACpB,+BAAOL,KAAKG,MAAM7B,EAAKgB,OAAOc,OAAO,GAAGC,eAG5C,sBAAKlB,UAAU,gBAAf,UACE,4CACc,IACZ,+BACGa,KAAKG,MAAM7B,EAAKgB,OAAOgB,eAAeC,MAAMC,eAGjD,uCACS,IACP,+BACGR,KAAKG,MAAM7B,EAAKgB,OAAOgB,eAAeG,GAAGD,YACpC,OAEV,wCACU,IACR,+BACGR,KAAKG,MAAM7B,EAAKgB,OAAOgB,eAAeI,GAAGF,YACpC,OAEV,0CACY,IACV,+BACGR,KAAKG,MAAM7B,EAAKgB,OAAOgB,eAAeK,GAAGH,YACpC,OAEV,0CACY,IACV,+BAAOR,KAAKG,MAAM7B,EAAKgB,OAAOgB,eAAeM,EAAEJ,YAAkB,OAEnE,qCACO,IACL,+BACGR,KAAKG,MAAM7B,EAAKgB,OAAOgB,eAAeO,GAAGL,YACpC,oBAUTM,yBAAK1C","file":"static/js/3.7528fe0d.chunk.js","sourcesContent":["import React, { useEffect, useState, memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../assets/overview.css\";\r\nconst Overview = () => {\r\n  const [data, setData] = useState({});\r\n  const fetchData = useSelector((state) => state.OverviewReducer.item);\r\n\r\n  const updateData = () => {\r\n    if (fetchData) {\r\n      setData(fetchData);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    updateData();\r\n  }, [fetchData]);\r\n\r\n  console.log(\"overview page\", data);\r\n  return (\r\n    <div>\r\n      <center>\r\n        <h4>items page</h4>\r\n      </center>\r\n\r\n      {Object.keys(data).length > 0 && (\r\n        <div className=\"card mb-3\" id=\"overview_card\">\r\n          <div className=\"row g-0\" id=\"overview_top_section\">\r\n            <div className=\"top_img_section\">\r\n              <img\r\n                src={data.recipe.image}\r\n                className=\"img-fluid rounded-start\"\r\n                alt={data.recipe.label}\r\n              />\r\n              <span className=\"dishtype_img\">{data.recipe.dishType}</span>\r\n            </div>\r\n            <div className=\"top_text_section\">\r\n              <div className=\"card-body\" id=\"card_body\">\r\n                <p id=\"meal_type\">\r\n                  {\" \"}\r\n                  <span></span> {data.recipe.mealType}\r\n                </p>\r\n                <h5 className=\"card-title\">{data.recipe.label}</h5>\r\n                {data.recipe.healthLabels.map((item, index) => {\r\n                  return (\r\n                    <span key={index} className=\"health_label\">\r\n                      {item}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"overview_bottom_section\">\r\n            <div className=\"section_one\">\r\n              <p>{data.recipe.yield} servings</p>\r\n              <h5>\r\n                {Math.ceil(data.recipe.calories)} <span>Kcal</span>\r\n              </h5>\r\n            </div>\r\n            <div className=\"section_two\">\r\n              <p>\r\n                <span></span> protein{\" \"}\r\n                <span>{Math.floor(data.recipe.digest[2].total)}</span>\r\n              </p>\r\n              <p>\r\n                <span></span> fat{\" \"}\r\n                <span>{Math.floor(data.recipe.digest[0].total)}</span>\r\n              </p>\r\n              <p>\r\n                <span></span> carbs{\" \"}\r\n                <span>{Math.floor(data.recipe.digest[1].total)}</span>\r\n              </p>\r\n            </div>\r\n            <div className=\"section_three\">\r\n              <p>\r\n                Cholesterol{\" \"}\r\n                <span>\r\n                  {Math.floor(data.recipe.totalNutrients.CHOLE.quantity)}\r\n                </span>\r\n              </p>\r\n              <p>\r\n                Sodium{\" \"}\r\n                <span>\r\n                  {Math.floor(data.recipe.totalNutrients.NA.quantity)}\r\n                </span>{\" \"}\r\n              </p>\r\n              <p>\r\n                Calsium{\" \"}\r\n                <span>\r\n                  {Math.floor(data.recipe.totalNutrients.CA.quantity)}\r\n                </span>{\" \"}\r\n              </p>\r\n              <p>\r\n                Magnesium{\" \"}\r\n                <span>\r\n                  {Math.floor(data.recipe.totalNutrients.MG.quantity)}\r\n                </span>{\" \"}\r\n              </p>\r\n              <p>\r\n                Potassium{\" \"}\r\n                <span>{Math.floor(data.recipe.totalNutrients.K.quantity)}</span>{\" \"}\r\n              </p>\r\n              <p>\r\n                Iron{\" \"}\r\n                <span>\r\n                  {Math.floor(data.recipe.totalNutrients.FE.quantity)}\r\n                </span>{\" \"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Overview);\r\n"],"sourceRoot":""}